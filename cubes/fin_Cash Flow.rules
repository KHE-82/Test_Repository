SKIPCHECK;
# DB('Cash Flow', !Year, !Scenario, !Cost Centre, !GL Code, !Month)
# DB('Balance Sheet', !Year, !Scenario, !Cost Centre, !GL Code, !Month BS)

# RULE 1
# Calculate the overall closing value of cash
['Cash Flow Statement'] = C:
['Operating Activities (CF)'] + ['Financing Activities (CF)'] + ['Investing Activities (CF)'] + ['Cash at beginning of reporting period'];

# RULE 2
# Calculate Cash at the beginning of the reporting period
['Cash at beginning of reporting period'] =
# Test the current month for July
IF(!Month @= 'Jul',
# If month is July then use cash at June for prior year
DB('fin_Balance Sheet', DIMNM('Year', DIMIX('Year',!Year)-1), !Scenario, !Cost Centre, 'Cash at beginning of reporting period', 'Jun','value'),
# Calculate July equal to P13 prior year (no period 0 data)
DB('fin_Balance Sheet', !Year, !Scenario, !Cost Centre, 'Cash at beginning of reporting period', ATTRS('Month', !Month, 'Last_Mth'),'value'));

# RULE 3
# Balancing Item
['adj - Suppliers (CF)']  = -1 *(
DB('fin_Balance Sheet', !Year, !Scenario, !Cost Centre, 'Cash at beginning of reporting period', !Month,'value') -
['Cash Received - Operating'] -
['Investing Activities (CF)'] -
['Financing Activities (CF)'] +
['Employees (CF)'] +
['Core Suppliers'] -
['Cash at beginning of reporting period']);

# RULE 4
# Repayment of debt
['adj - Repayment of debt (CF)', 'Jun'] =
(DB('fin_Balance Sheet', !Year, !Scenario, !Cost Centre, '27570', 'Jun','value') -
DB('fin_Balance Sheet', !Year, !Scenario, !Cost Centre, '27570', 'May','value'));

# RULE 5
# Calculate all other values based on this rule
[] = N:
# Check if account an adjustment account
IF(SUBST(!GL Code,1,3)@='Adj',
# Allow user to enter adjustment value
STET,
# Else calculate value
# Check if account used in cashflow statement (look at CF Account attribute on GL_Code dimension)
# Determine whether Balance sheet of Profit and Loss Account
IF((SUBST(!GL Code,1,1)@='5' % SUBST(!GL Code,1,1)@='4' % !GL Code @='19914' % !GL Code @='19913'),
# Calculate profit and loss value
DB('fin_Operating Statement', !Year, !Scenario, !Cost Centre, !GL Code, !Month,'value'),
# Calculate Balance Sheet value if month is July
IF(!Month @='Jul',
(DB('fin_Balance Sheet', !Year, !Scenario, !Cost Centre, !GL Code, 'Jul','value') -
DB('fin_Balance Sheet', DIMNM('Year', (DIMIX('Year', !Year)-1)), !Scenario, !Cost Centre, !GL Code, 'P13','value')),
# Calculate Balance Sheet value if month not July
(DB('fin_Balance Sheet', !Year, !Scenario, !Cost Centre, !GL Code, !Month) -
DB('fin_Balance Sheet', !Year, !Scenario, !Cost Centre, !GL Code, ATTRS('Month', !Month, 'Last_Mth'),'value'))))
# End the IF statement
);


FEEDERS;
# INTERNAL FEEDERS

# Global Feeder Rule
# Feed P13 into Jul the next year
['Actual'] =>
DB('fin_Cash Flow', IF((!Month @= 'P13') % (!Month @= 'Jun'),DIMNM('Year', DIMIX('Year', !Year) + 1),!Year), 'Actual', !Cost Centre, !GL Code, IF((!Month @='P13') % (!Month @= 'Jul'), 'Jun',ATTRS('Month', !Month, 'Next_Mth')),'value');

# RULE 1
# No feeders required

# RULE 2
# Fed from Balance Sheet Cube

# RULE 3
['Actual', 'Cash Flow Statement'] => ['Actual', 'adj - Suppliers (CF)'];
['Actual', 'Financing Activities (CF)'] => ['Actual', 'adj - Suppliers (CF)'];
['Actual', 'Investing Activities (CF)'] => ['Actual', 'adj - Suppliers (CF)'];
['Actual', 'Employees (CF)'] => ['Actual', 'adj - Suppliers (CF)'];
['Actual', 'Core Suppliers'] => ['Actual', 'adj - Suppliers (CF)'];
['Actual', 'Cash Received - Operating'] => ['Actual', 'adj - Suppliers (CF)'];
['Actual', 'Cash at beginning of reporting period'] => ['Actual', 'adj - Suppliers (CF)'];

# RULE 4
# Fed by global rule and from BalSheet cube

# RULE 5
# Fed by global rule and from BalSheet and PNL cubes










































































































































































































































































































































































































































































































































































































































































































































































